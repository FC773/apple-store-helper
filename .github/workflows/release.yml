name: Build & Release

on:
    push:
        tags:
            - "v*" # 仅在推 tag 时触发，比如 v1.7.2

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    # 使用 Ubuntu runner 运行 fyne-cross，因为它有 Docker 支持
                    - os: ubuntu-latest
                      platform: darwin
                      arch: amd64,arm64
                      artifact_name: apple-store-helper-darwin
                    - os: ubuntu-latest
                      platform: windows
                      arch: 386,amd64
                      artifact_name: apple-store-helper-windows

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.22"

            - name: Install system dependencies
              run: |
                  # 安装音频开发库（beep 需要）和 Docker
                  sudo apt-get update
                  sudo apt-get install -y portaudio19-dev pkg-config

                  # 检查 Docker 是否可用
                  docker --version

            - name: Install Fyne tools
              run: |
                  go install fyne.io/fyne/v2/cmd/fyne@latest
                  go install github.com/fyne-io/fyne-cross@latest
                  echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

            - name: Cache fyne-cross engines
              uses: actions/cache@v4
              with:
                  path: ~/.fyne-cross
                  key: ubuntu-fyne-cross-${{ matrix.platform }}-${{ hashFiles('go.mod') }}

            - name: Get tag version
              id: vars
              run: echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

            - name: Build with fyne-cross
              run: |
                  export PATH="$(go env GOPATH)/bin:$PATH"

                  # 使用 fyne-cross 构建
                  fyne-cross ${{ matrix.platform }} \
                    -arch=${{ matrix.arch }} \
                    -app-id=apple.store.helper \
                    -name="Apple Store Helper" \
                    -ldflags="-X 'github.com/hteen/apple-store-helper/common.VERSION=${{ steps.vars.outputs.tag }}'"

                  # 检查构建结果
                  if [ ! -d "fyne-cross/dist" ]; then
                      echo "❌ fyne-cross 构建失败：dist 目录未生成"
                      exit 1
                  fi
                  echo "✅ fyne-cross 构建成功"

            - name: Prepare Darwin packages
              if: matrix.platform == 'darwin'
              run: |
                  # 在 Ubuntu 上构建的 Darwin 包需要用户手动签名
                  echo "ℹ️ Darwin 包已构建完成，需要用户手动签名"
                  echo "📦 构建的包位置："
                  find fyne-cross/dist -name "*.app" -type d

            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.artifact_name }}-${{ steps.vars.outputs.tag }}
                  path: fyne-cross/dist/
                  if-no-files-found: error
                  retention-days: 30

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ./artifacts

            - name: Release
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      ## What's New
                      - Auto build for ${{ github.ref_name }}
                      - Cross-platform build with fyne-cross
                      - Supports: darwin-amd64, darwin-arm64, windows-386, windows-amd64

                      ## 注意事项
                      - Darwin 包需要手动签名才能在 macOS 上运行
                      - 签名命令：`xattr -cr "Apple Store Helper.app" && codesign --force --deep --sign - "Apple Store Helper.app"`
                  artifacts: "artifacts/*"
